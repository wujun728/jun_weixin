/*
TouchSlider 0.95
Licensed under the MIT license.
http://touchslider.com
*/
/*jslint browser: true, undef: true, sloppy: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
/*global WebKitCSSMatrix: false, jQuery: false, getComputedStyle: false */
(function (a, b) { window.touchSlider = function (f) { f = f || {}; var k = f.namespace || "touchslider", l = a(f.container); if (l.length !== 1) { l.each(function () { touchSlider({ container: this }) }); return } f = a.extend({ autoplay: false, delay: 3000, margin: 5, viewport: "." + k + "-viewport", prev: "." + k + "-prev", next: "." + k + "-next", pagination: "." + k + "-nav-item", currentClass: k + "-nav-item-current", duration: 350, mouseTouch: true, imgloadflag: false, imgsrc: "rel" }, f); var D = { current: 0, step: h, next: o, prev: n, start: g, stop: r }, c = "ontouchstart" in window && "WebKitCSSMatrix" in window, x = "touchstart", m = "touchmove", B = "touchend", y = a(f.viewport, l), z = f.imgloadflag, t = f.imgsrc, w = f.scroller ? a(f.scroller, l) : y.children(), q = w.children(), v = a(f.pagination, l); if (w.css("position") !== "absolute") { var e = y.height(); y.css({ height: e, position: "relative" }); w.css({ position: "absolute", left: 0, height: e, width: 100000 }) } if (!c) { x = "mousedown"; m = "mousemove"; B = "mouseup" } q.css("position", "absolute"); var C = c ? function (G, F, H) { if (F === b) { return new WebKitCSSMatrix(getComputedStyle(G.jquery ? G[0] : G).webkitTransform).e } G.css({ webkitTransitionDuration: H ? H + "ms" : "0", webkitTransform: function (I) { return "translate3d(" + (typeof F === "number" ? F : F.call(this, I)) + "px,0,0)" } }) } : function (G, F) { if (F === b) { return parseInt((G.jquery ? G[0] : G).style.left, 10) } G.css("left", F) }; if (c) { q.css({ webkitTransitionProperty: "-webkit-transform", webkitTransitionTimingFunction: "cubic-bezier(0,0,0.25,1)" }) } C(q.not(q[0]), 10000); C(q.eq(0), 0); var p = (function () { var G = [0], F = [0], H = a.noop; return { moving: false, init: function () { w.bind("webkitTransitionEnd", function () { H() }) }, to: function (O, I) { I = I || {}; if (O >= q.length) { O = 0 } else { if (O < 0) { O = q.length - 1 } } var P = f.duration, K = q.eq(O), J = a.inArray(O, G), V = 0; w.stop(); p.moving = true; clearTimeout(j); if (J !== -1) { V = F[J] } else { var Q, N = q.index(K); J = b; if (I.dirX === -1) { F.unshift(0); G.unshift(N) } else { if (I.dirX === 1) { F.push(0); G.push(N) } else { for (Q = G.length - 1; Q >= 0; Q--) { if (G[Q] < N) { F.splice(Q + 1, 0, 0); G.splice(Q + 1, 0, N); J = 0; break } } if (J === b) { F.unshift(F); G.unshift(N) } } } J = a.inArray(N, G); if (J === 0) { V = F[1] - (K.outerWidth() + f.margin); C(K, V); F[J] = V } else { if (J === G.length - 1) { V = F[J - 1] + q.eq(G[J - 1]).outerWidth() + f.margin; C(K, V); F[J] = V } else { var T = K.outerWidth(); K.css("opacity", 0); V = F[J + 1] - Math.round((T + f.margin) / 2); F[J] = V; C(K, V); var S = V, M = G.length; for (Q = J - 1; Q >= 0; Q--) { S -= q.eq(G[Q]).outerWidth() + f.margin; F[Q] = S } var R = V; for (Q = J + 1; Q < M; Q++) { R += q.eq(G[Q]).outerWidth() + f.margin; F[Q] = R } for (Q = 0; Q < M; Q++) { q.eq(G[Q]).animate({ left: F[Q] }, { duration: P, queue: false, complete: function () { if (K.is(this)) { K.animate({ opacity: 1 }, P) } } }) } } } } if (I.pxInMs) { P = Math.min(Math.max(Math.round(Math.abs(C(w)) / I.pxInMs), 100), P) } H = function () { C(q.not(K), -10000); G = [q.index(K)]; F = [V]; if (I.complete) { I.complete() } p.moving = false; s() }; if (!c) { w.animate({ left: -V }, { duration: P, queue: false, complete: H }) } else { C(w, -V, P) } D.current = O; i(O); if (z) { var U = y.children().eq(O); var L = U.find("img"); if (L.attr("src") != L.attr(t)) { L.attr("src", L.attr(t)) } } }, stop: function () { if (c) { C(w, C(w)) } else { w.stop() } }, moveStart: function (K) { p.moving = true; clearTimeout(j); w.stop(); p.startPageX = K.pageX; var I = C(w), J; p.leftCount = I; if (G[0] === 0) { if (F[0] + I > 0) { p.leftCount = I + (F[0] + I) * 3 } } else { if (G[G.length - 1] === q.length - 1) { J = F[G.length - 1] + I; if (J < 0) { p.leftCount = I + J * 3 } } } }, move: function (N, P) { var O = N.pageX - P, L = C(w), J = q.eq(G[0]), K = G.length - 1, Q = q.eq(G[K]), R, I, M; p.leftCount += O; if (O > 0) { while (G[0] !== 0 && L + F[0] + O > f.margin) { R = q.eq(G[0] - 1); I = F[0] - R.outerWidth() - f.margin; C(R, I); F.unshift(I); G.unshift(G[0] - 1); K++; J = R } } if (((O > 0 && L + F[0] + O > 0) || (O < 0 && L + F[0] > 0)) && G[0] === 0) { M = Math.min(Math.round((p.leftCount + F[0]) / 4), y.innerWidth() / 2); O = M - (L + F[0]) } if (O < 0) { while (!Q.is(q.last()) && L + F[K] + O + Q.outerWidth() + f.margin < y.innerWidth()) { R = q.eq(G[K] + 1); I = F[K] + Q.outerWidth() + f.margin; C(R, I); F.push(I); G.push(G[K++] + 1); Q = R } } if (((O > 0 && L + F[K] < 0) || (O < 0 && L + F[K] + O < 0)) && Q.is(q.last())) { M = Math.max(Math.round((p.leftCount + F[K]) / 4), -y.innerWidth() / 2); O = M - (L + F[K]) } C(w, L + O) }, moveEnd: function (Q, X, W, K, T, S) { var L = G.length, O = C(w), M = L - 1, J; if (F[0] + O > 0) { M = 0 } else { if (F[G.length - 1] + O < 0) { } else { J = { pxInMs: X }; var N, V, R = L - 1, P = y.innerWidth(); for (N = 0; N < L - 1; N++) { V = F[N] + q.eq(G[N]).outerWidth() + O; if (V > 0 && V > P - (F[N + 1] + O)) { R = N; break } } if (u) { M = R } else { var I = L - 1, U = Math.round(w.offset().left); for (N = 0; N < L; N++) { if (F[N] + U > Q.pageX) { I = N - 1; break } } M = R; if (R === I && Q.timeStamp - K < 1000 && T + S > Math.sqrt(Math.pow(y.height(), 2) + Math.pow(P, 2)) * 0.05) { M = Math.max(0, Math.min(L - 1, M + W)) } } } } M = G[M]; p.to(M, J) } } }()); p.init(); if (c) { var u = false; w.bind("webkitTransitionStart", function () { u = true }); w.bind("webkitTransitionEnd", function () { u = false }) } function i(F) { v.removeClass(f.currentClass).eq(F).addClass(f.currentClass) } function h(H, G) { var F = D.current; if (F !== H) { H = H !== b ? H : F + 1; p.to(H, { complete: G }) } } function o(F) { p.to(D.current + 1, { dirX: 1, complete: F }) } function n(F) { p.to(D.current - 1, { dirX: -1, complete: F }) } var d = false, A = false, j; y.hover(function () { clearTimeout(j); d = true }, function () { d = false; s() }); function s() { if (A) { g() } } function g() { A = true; if (!d) { clearTimeout(j); j = setTimeout(function () { if (!p.moving && !d) { o() } }, f.delay) } return f.container } function r() { clearTimeout(j); A = false; return f.container } v.click(function () { h(v.index(this)) }); a(f.prev, l).click(function () { n() }); a(f.next, l).click(function () { o() }); function E() { var X = a(document), O, P, S = false, K, R, V, W, N, G, L, T, U, M, F, J = function (Y) { if (Y.which > 1) { return } if (S) { X.triggerHandler(B + "." + k) } S = true; P = false, O = Y.timeStamp; N = M = 0; K = [0, 0, 0, O]; if (Y.originalEvent.touches) { X.one(x, H); return } Y.preventDefault(); V = W = Y.pageX; T = U = Y.pageY; L = w[0].offsetLeft; R = [0, 0, 0, V]; X.bind(m, Q); X.one(B + "." + k, I); p.moveStart(Y) }, H = function (Y) { if (Y.originalEvent.touches.length !== 1) { return } V = W = Y.pageX = Y.originalEvent.touches[0].pageX; T = U = Y.pageY = Y.originalEvent.touches[0].pageY; G = F = 0; L = new WebKitCSSMatrix(window.getComputedStyle(w[0]).webkitTransform).e; R = [0, 0, 0, V]; X.bind(m, Q); X.one(B, I); p.moveStart(Y) }, Q = function (aa) { var Z, Y; if (aa.originalEvent.touches && c) { if (aa.originalEvent.touches.length !== 1) { return } Z = aa.pageX = aa.originalEvent.touches[0].pageX; Y = aa.pageY = aa.originalEvent.touches[0].pageY; G += Math.abs(Z - W); F += Math.abs(Y - U); if (Math.abs(G - F) > 50) { var ab = G; G = Math.min(100, Math.max(0, G - F)); F = Math.min(100, Math.max(0, F - ab)) } if (Z === W) { return } if (!P) { if (G > F) { aa.preventDefault(); P = true } else { I(aa) } } } else { Z = aa.pageX; Y = aa.pageY; if (Z === W) { return } if (/msie/.test(navigator.userAgent.toLowerCase())) { aa.preventDefault() } } N += Math.abs(Z - W); M += Math.abs(Y - U); K.shift(); K.push(aa.timeStamp); R.shift(); R.push(Z); p.move(aa, W); W = Z; U = Y }, I = function (ac) { S = false; if (!ac.originalEvent || ac.originalEvent.touches) { ac.pageX = W; ac.pageY = U } X.unbind(m, Q); var ab = K.length, Y = 0, aa = 0; while (--ab > 0) { if (K[ab - 1]) { var Z = R[ab] - R[ab - 1]; Y += Math.abs(Z) / (K[ab] - K[ab - 1]); if (Z !== 0) { aa = Z > 0 ? -1 : 1 } } } Y = Y / K.length; p.moveEnd(ac, Y, aa, O, N, M); u = false; if (N + M > 4) { y.one("click", function (ad) { ad.preventDefault() }) } }; y.bind(x, J) } if (f.mouseTouch) { E() } if (f.autoplay) { g() } l.data(k, D) }; a.fn.touchSlider = function (c) { c = c || {}; c.container = this; touchSlider(c); return this } }(jQuery));